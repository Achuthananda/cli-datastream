#! /usr/bin/env python

""" Copyright 2017 Akamai Technologies, Inc. All Rights Reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.

 You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

 ************************************************************************
 *  DataStream 2.0 CLI module by Achuthananda M P (apadmana@akamai.com) *
 ************************************************************************

"""
# Libraries commmon to python 2 and 3
from __future__ import print_function
import sys
import os
import logging
import random
import re
import requests
import json
import urllib
import texttable as tt
from future import standard_library
from future.builtins import next
from future.builtins import object
from http_calls import EdgeGridHttpCaller
from akamai.edgegrid import EdgeGridAuth
from config import EdgeGridConfig
from subprocess import call
standard_library.install_aliases()

if sys.version_info[0] >= 3:
     # python3
	from urllib.parse import urljoin
else:
     # python2.7
     from urlparse import urljoin

from endpointdef import *
from outputformat import *


def main():
    """ Processes the right command (list-configs, get-configs, acknowledge-cidrs) """
    if config.command == "list-groups":
        # Get the list of policies in JSON format for the given network
        if hasattr(config, 'accountSwitchKey'):
            groupList = listGroups(config.accountSwitchKey)
        else:
            groupList = listGroups()
        formatOutputGroupList(groupList, config.output_type)

    elif config.command == "list-connectors":
        if hasattr(config, 'accountSwitchKey'):
            connectorList = listConnectors(config.accountSwitchKey)
        else:
            connectorList = listConnectors()
        formatOutputConnectorList(connectorList, config.output_type)

    elif config.command == "list-streams":
        if hasattr(config, 'accountSwitchKey'):
            streamList = listStreams(config.groupid,config.accountSwitchKey)
        else:
            streamList = listStreams(config.groupid)
        formatOutputStreamList(streamList, config.output_type)

    elif config.command == "get-stream":
        if hasattr(config, 'accountSwitchKey'):
            streamDetail = getStream(config.streamid,config.accountSwitchKey)
        else:
            streamDetail = getStream(config.streamid)
        formatOutputStreamDetail(streamDetail, config.output_type)

    elif config.command == "activation-history":
        if hasattr(config, 'accountSwitchKey'):
            activationHistory = getStreamActHistory(config.streamid,config.accountSwitchKey)
        else:
            activationHistory = getStreamActHistory(config.streamid)
        formatOutputActHistory(activationHistory, config.output_type)

    elif config.command == "acknowledge-cidr":
        #Please ask for acknowledgement.
        i = 1
        while i < 2:
            decision = input("Are you sure:[Y/N]")
            if decision == "yes" or decision == 'y' or decision == 'Y':
                print("Attempting to Acknowlede the CIDR block.........")
                ackdetail = acknowledgeCidr(config.config_id,config.version_id)
                if ackdetail['status'] == 200:
                    print('Successfully Acknowledged')
                else:
                    print('There is a failure in acknowledging and status code is ',ackdetail['status'])
                break
            elif decision == 'no' or decision == 'n':
                print("Aborting the acknowledgement")
                break
            else:
                print("Please enter the Correct Input")

if __name__ == "__main__":
    main()
